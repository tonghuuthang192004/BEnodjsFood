const VoucherModel = require('../../modal/client/voucher.model');

// üìå 1Ô∏è‚É£ L·∫•y danh s√°ch voucher ƒëang ho·∫°t ƒë·ªông
exports.getActiveVouchers = async (req, res) => {
  try {
    const vouchers = await VoucherModel.getAllActiveVouchers();
    res.status(200).json(vouchers);
  } catch (error) {
    console.error('‚ùå [getActiveVouchers] Error:', error);
    res.status(500).json({ success: false, message: 'L·ªói server khi l·∫•y danh s√°ch voucher' });
  }
};

// üìå 2Ô∏è‚É£ L∆∞u voucher
exports.saveVoucher = async (req, res) => {
  const { id_nguoi_dung, id_giam_gia } = req.body;
  if (!id_nguoi_dung || !id_giam_gia) {
    return res.status(400).json({ success: false, message: 'Thi·∫øu id_nguoi_dung ho·∫∑c id_giam_gia' });
  }

  try {
    const voucher = await VoucherModel.getVoucherById(id_giam_gia);
    if (!voucher) {
      return res.status(404).json({ success: false, message: 'Voucher kh√¥ng t·ªìn t·∫°i ho·∫∑c h·∫øt h·∫°n' });
    }

    const result = await VoucherModel.saveVoucherForUser(id_nguoi_dung, id_giam_gia);
    if (result.existed) {
      return res.status(409).json({ success: false, message: 'Voucher n√†y ƒë√£ ƒë∆∞·ª£c l∆∞u' });
    }

    res.status(200).json({ success: true, message: 'ƒê√£ l∆∞u voucher th√†nh c√¥ng' });
  } catch (error) {
    console.error('‚ùå [saveVoucher] Error:', error);
    res.status(500).json({ success: false, message: error.message || 'L·ªói server khi l∆∞u voucher' });
  }
};

// üìå 3Ô∏è‚É£ L·∫•y danh s√°ch voucher ƒë√£ l∆∞u
exports.getSavedVouchers = async (req, res) => {
  const { userId } = req.params;
  if (!userId) {
    return res.status(400).json({ success: false, message: 'Thi·∫øu userId' });
  }

  try {
    const savedVouchers = await VoucherModel.getSavedVouchersByUser(userId);
    res.status(200).json(savedVouchers);
  } catch (error) {
    console.error('‚ùå [getSavedVouchers] Error:', error);
    res.status(500).json({ success: false, message: 'L·ªói server khi l·∫•y voucher ƒë√£ l∆∞u' });
  }
};

// üìå 4Ô∏è‚É£ S·ª≠ d·ª•ng voucher
exports.useVoucher = async (req, res) => {
  const { id_nguoi_dung, ma_giam_gia, tong_gia_tri } = req.body;
  if (!id_nguoi_dung || !ma_giam_gia || !tong_gia_tri) {
    return res.status(400).json({ success: false, message: 'Thi·∫øu th√¥ng tin' });
  }

  try {
    const voucher = await VoucherModel.getVoucherByCode(ma_giam_gia);
    if (!voucher) {
      return res.status(404).json({ success: false, message: 'M√£ gi·∫£m gi√° kh√¥ng h·ª£p l·ªá ho·∫∑c h·∫øt h·∫°n' });
    }

    if (tong_gia_tri < parseFloat(voucher.dieu_kien || 0)) {
      return res.status(400).json({ success: false, message: `ƒê∆°n h√†ng ph·∫£i t·ª´ ${voucher.dieu_kien} VNƒê ƒë·ªÉ √°p d·ª•ng voucher n√†y` });
    }

    const gia_tri_giam = voucher.loai === 'phan_tram'
      ? (tong_gia_tri * voucher.gia_tri) / 100
      : parseFloat(voucher.gia_tri);

    const tong_sau_giam = tong_gia_tri - gia_tri_giam;

    res.status(200).json({
      success: true,
      message: '√Åp d·ª•ng voucher th√†nh c√¥ng',
      gia_tri_giam,
      tong_sau_giam
    });
  } catch (error) {
    console.error('‚ùå [useVoucher] Error:', error);
    res.status(500).json({ success: false, message: 'L·ªói server khi √°p d·ª•ng voucher' });
  }
};
